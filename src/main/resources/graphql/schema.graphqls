type AsylumDecision {
  id: ID!
  year: Int
  countryOfOrigin: String
  countryOfOriginIso: String
  countryOfAsylum: String
  countryOfAsylumIso: String
  decRecognized: Int
  decOther: Int
  decRejected: Int
  decClosed: Int
  decTotal: Int
  acceptanceRate: Float
  decPc: Boolean
}

type AsylumRequest {
  id: ID!
  year: Int
  countryOfOrigin: String
  countryOfOriginIso: String
  countryOfAsylum: String
  countryOfAsylumIso: String
  appPc: Boolean
  appliedPer100k: Float
  applied: Int
}

type DashboardSummary {
  id: ID!
  year: Int
  countryIso: String
  country: String
  totalApplied: Int
  appliedPer100k: Float
  acceptanceRate: Float
  internalDisplacementTotal: Int
  displacementRatePer100k: Float
  idpReturnees: Int
  refugeesReturnees: Int
  naturalizationsTotal: Int
  naturalizationChange: Float
  resettlementRequests: Int
  resettlementDepartures: Int
  resettlementSubmissions: Int
  resettlementNeeds: Int
  resettlementGap: Float
  coverageRate: Float
  requestVsNeedsRatio: Float
  submissionsEfficiency: Float
  realizationRate: Float
}

type IdpDisplacement {
  id: ID!
  year: Int
  countryOfOrigin: String
  countryOfOriginIso: String
  displacementRatePer100k: Float
  total: Int
}

type IdpReturnees {
  id: ID!
  year: Int
  countryOfOriginIso: String
  countryOfOrigin: String
  idpReturneesNumber: Int
  refugeesReturnees: Int
  byDate: String
}

type RefugeeNaturalization {
  id: ID!
  year: Int
  countryOfOrigin: String
  countryOfOriginIso: String
  countryOfAsylum: String
  countryOfAsylumIso: String
  total: Int
  intakeDate: Int
  naturalizationChange: Float
}

type ResettlementSummary {
  id: ID!
  year: Int
  countryOfOriginIso: String
  countryOfOrigin: String
  countryOfAsylumIso: String
  countryOfAsylum: String
  countryOfResettlementIso: String
  countryOfResettlement: String
  cases: Int
  persons: Int
  departuresTotal: Int
  totalNeeds: Int
  submissionsTotal: Int
  resettlementGap: Float
  coverageRate: Float
  requestVsNeedsRatio: Float
  submissionsEfficiency: Float
  realizationRate: Float
}

type ResettlementSummaryGrouped {
  countriesIso: String
  countriesNames: String
  totalCases: Int
  totalDepartures: Int
  totalPersons: Int
  totalNeeds: Int
  totalSubmissions: Int
  coverageRate: Float
  resettlementGap: Float
  requestVsNeedsRatio: Float
  submissionsEfficiency: Float
  realizationRate: Float
}

type Query {
  asylumDecisions: [AsylumDecision]
  asylumRequests: [AsylumRequest]
  dashboardSummaries: [DashboardSummary]
  idpDisplacements: [IdpDisplacement]
  idpReturnees: [IdpReturnees]
  refugeeNaturalizations: [RefugeeNaturalization]
  resettlementSummaries: [ResettlementSummary]

  # Queries with filters
  dashboardSummariesByYear(year: Int!): [DashboardSummary]
  asylumRequestsByYearAndCountry(
    year: Int!
    countryOfOriginIso: String
    countryOfAsylumIso: String
  ): [AsylumRequest]
  asylumDecisionsByYearAndCountry(
    year: Int!
    countryOfOriginIso: String
    countryOfAsylumIso: String
  ): [AsylumDecision]
  refugeeNaturalizationsByYearAndCountry(
    year: Int!
    countryOfOriginIso: String
    countryOfAsylumIso: String
  ): [RefugeeNaturalization]
  resettlementSummariesByYearGroupedBy(
    year: Int!
    grouping: String!
  ): [ResettlementSummaryGrouped]
}
